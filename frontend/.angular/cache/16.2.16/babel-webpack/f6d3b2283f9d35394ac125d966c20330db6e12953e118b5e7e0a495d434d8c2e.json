{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/clients';\n  }\n  getClients() {\n    return this.http.get(this.apiUrl);\n  }\n  getClient(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createClient(client) {\n    return this.http.post(this.apiUrl, client);\n  }\n  updateClient(id, client) {\n    return this.http.put(`${this.apiUrl}/${id}`, client);\n  }\n  deleteClient(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ClientService_Factory(t) {\n      return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClientService,\n      factory: ClientService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ClientService","constructor","http","apiUrl","getClients","get","getClient","id","createClient","client","post","updateClient","put","deleteClient","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\ENSET\\S4\\JEE\\Elbatir_Elmahdi\\frontend\\src\\app\\services\\client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Client } from '../models/client.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n  private apiUrl = 'http://localhost:8080/api/clients';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getClients(): Observable<Client[]> {\r\n    return this.http.get<Client[]>(this.apiUrl);\r\n  }\r\n\r\n  getClient(id: number): Observable<Client> {\r\n    return this.http.get<Client>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createClient(client: Client): Observable<Client> {\r\n    return this.http.post<Client>(this.apiUrl, client);\r\n  }\r\n\r\n  updateClient(id: number, client: Client): Observable<Client> {\r\n    return this.http.put<Client>(`${this.apiUrl}/${id}`, client);\r\n  }\r\n\r\n  deleteClient(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n} "],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,mCAAmC;EAEZ;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,MAAM,CAAC;EAC7C;EAEAG,SAASA,CAACC,EAAU;IAClB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACtD;EAEAC,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAS,IAAI,CAACP,MAAM,EAAEM,MAAM,CAAC;EACpD;EAEAE,YAAYA,CAACJ,EAAU,EAAEE,MAAc;IACrC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,MAAM,CAAC;EAC9D;EAEAI,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAblB,aAAa;MAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}